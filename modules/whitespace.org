#+TITLE: Whitespace module

* Whitespace
** Symbols

   Set up white space replacement symbols.

   #+begin_src emacs-lisp
     (setq whitespace-display-mappings
           '((space-mark 32
                         [183]
                         [46])
             (space-mark 160
                         [9085]
                         [164]
                         [95])
             (space-mark 2208
                         [9085]
                         [95])
             (space-mark 2336
                         [9085]
                         [95])
             (space-mark 3616
                         [9085]
                         [95])
             (space-mark 3872
                         [9085]
                         [95])
             (newline-mark 10
                           [8629 10]
                           [182 10]
                           [36 10])
             (tab-mark 9
                       [8677 9]
                       [187 9]
                       [92 9])))
   #+end_src

** Global mode

   Enable whitespace global mode.

   #+begin_src emacs-lisp
     ;; Override starter-kit variable
     (defun whitespace-set-style ()
       (setq whitespace-style
         '(face tabs spaces trailing lines-tail
                space-before-tab newline
                indentation empty space-after-tab
                space-mark tab-mark)))
     (add-hook 'text-mode-hook 'whitespace-set-style)
     (add-hook 'prog-mode-hook 'whitespace-set-style)

     (global-whitespace-mode)
   #+end_src

** Popup fixes

   When popups are shown, the whitespace plugin tends to mess them up.
   This workaround disables whitespace while the popup is shown.

   #+begin_src emacs-lisp
     (require 'cl)

     (defun popup-disable-whitespace ()
       "Disable whitespace while showing a popup"
       (unless (find-if-not 'popup-hidden-p popup-instances)
         (global-whitespace-mode 0)
         (message "turn off whitespace")))

     (defun popup-enable-whitespace ()
       "Enable whitespace after having shown a popup"
       (unless (find-if-not 'popup-hidden-p popup-instances)
         (global-whitespace-mode 1)
         (message "turn on whitespace")))

     (eval-after-load 'popup
       '(progn
          (defadvice popup-draw (before popup-draw-whitespace
                                        activate)
            (popup-disable-whitespace))
          (defadvice popup-hide (after popup-hide-whitespace
                                       activate)
            (popup-enable-whitespace))))
   #+end_src
